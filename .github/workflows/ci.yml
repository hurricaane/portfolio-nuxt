name: CI/CD Workflow

on:
  pull_request:
    branches:
      - main
    paths:
      - "Dockerfile"
      - "**.vue"
      - "**.ts"
      - "**.js"
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-push-and-deploy-image:
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Log into the container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Setup QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Setup Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Extract metadata for docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # - name: Build and push image
      #   id: push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true

      # - name: Create Render service preview
      #   if: github.event_name == 'pull_request'
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/preview"
      #     method: "POST"
      #     bearerToken: ${{ secrets.RENDER_API_KEY }}
      #     data: '{ "imagePath": "ghcr.io/hurricaane/portfolio-nuxt@${{ steps.push.outputs.digest }}" }'

      - name: List services
        if: github.event_name == 'pull_request'
        id: request
        uses: fjogeleit/http-request-action@v1
        with:
          url: https://api.render.com/v1/services?includePreviews=true&limit=20
          method: "GET"
          bearerToken: ${{ secrets.RENDER_API_KEY }}

      - name: Show Response
        if: github.event_name == 'pull_request'
        run: echo ${{ steps.request.outputs.response }}

      # - name: Create Render service preview
      #   if: github.event_name == 'pull_request'
      #   env:
      #     SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      #     API_KEY: ${{ secrets.RENDER_API_KEY }}
      #     DIGEST: ${{ steps.push.outputs.digest }}
      #   run: |
      #     curl --request POST \
      #     --url "https://api.render.com/v1/services/$SERVICE_ID/preview" \
      #     --header "Authorization: Bearer $API_KEY" \
      #     --header "Content-Type: application/json" \
      #     --data '{
      #       "imagePath": "$REGISTRY/$IMAGE_NAME@$DIGEST"
      #     }'

      - name: Trigger deploy on Render
        if: github.event_name != 'pull_request'
        env:
          TAG: ${{ steps.meta.outputs.tags }}
          DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl --request GET \
          --data-urlencode "imgURL=$REGISTRY/$IMAGE_NAME:$TAG \
          --url $DEPLOY_HOOK_URL
